import * as fs from 'fs'
import * as path from 'path'
import luamin from 'luamin'

export const buildLuaScripts = () => {
    const scriptsDir = path.resolve(__dirname, '../src/scripts')
    const outputPath = path.join(scriptsDir, 'index.ts')
    let outputContent = `/**\n * This file is auto-generated by scripts/lua-minifier.ts\n * Do not edit this file manually.\n */\n\n`
    let scriptCount = 0

    fs.readdirSync(scriptsDir).forEach(file => {
        if (path.extname(file) === '.lua') {
            const inputPath = path.join(scriptsDir, file)
            const baseName = path.basename(file, '.lua')
            // Convert kebab-case to camelCase for variable names
            const varName = baseName.replace(/-(\w)/g, (_, c) =>
                c.toUpperCase()
            )

            const code = fs.readFileSync(inputPath, 'utf8')

            try {
                const minified = luamin.minify(code).replaceAll("'", '"')
                outputContent += `export const ${varName} = '${minified}'\n`
                console.log(
                    `✓ ${file} minified and added as export const ${varName}`
                )
                scriptCount++
            } catch (error) {
                console.error(`✗ Error processing ${file}:`, error)
            }
        }
    })

    if (scriptCount > 0) {
        fs.writeFileSync(outputPath, outputContent)
        console.log(
            `✓ Successfully created ${path.relative(process.cwd(), outputPath)} with ${scriptCount} script(s)`
        )
    } else {
        console.log('No .lua scripts found to process.')
    }
}

if (require.main === module) {
    buildLuaScripts()
}
